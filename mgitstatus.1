.\" Automatically generated by Pandoc 2.2.1
.\"
.TH "MGITSTATUS" "1" "Jul 2019" "" ""
.hy
.SH NAME
.PP
mgitstatus \[en] Show uncommitted, untracked and unpushed changes for
multiple Git repos.
.SH SYNOPSIS
.PP
\f[B]mgitstatus\f[] [\f[B]\[en]version\f[]] [\f[B]\-w\f[]]
[\f[B]\-e\f[]] [\f[B]\-f\f[]] [\f[B]\[en]no\-X\f[]] [\f[B]DIR\f[]]
[\f[B]DEPTH=2\f[]]
.SH DESCRIPTION
.PP
\f[B]mgitstatus\f[] shows uncommited, untracked and unpushed changes in
multiple Git repositories.
\f[B]mgitstatus\f[] scans for .git dirs up to \f[B]DEPTH\f[] directories
deep.
The default is 2.
If \f[B]DEPTH\f[] is 0, the scan is infinitely deep.
mgitstatus shows:
.IP \[bu] 2
\f[B]Uncommitted changes\f[] if there are unstaged or uncommitted
changes on the checked out branch.
.IP \[bu] 2
\f[B]Untracked files\f[] if there are untracked files which are not
ignored.
.IP \[bu] 2
\f[B]Needs push (BRANCH)\f[] if the branch is tracking a (remote) branch
which is behind.
.IP \[bu] 2
\f[B]Needs upstream (BRANCH)\f[] if a branch does not have a local or
remote upstream branch configured.
Changes in the branch may otherwise never be pushed or merged.
.IP \[bu] 2
\f[B]Needs pull (BRANCH)\f[] if the branch is tracking a (remote) branch
which is ahead.
This requires that the local git repo already knows about the remote
changes (i.e.\ you've done a fetch), or that you specify the \-f option.
mgitstatus does NOT contact the remote by default.
.IP \[bu] 2
\f[B]X stashes\f[] if there are stashes.
.PP
Since there are a lot of different states a git repository can be in,
mgitstatus makes no guarantees that all states are taken into account.
.SH OPTIONS
.TP
.B \f[B]\[en]version\f[]
Show version
.RS
.RE
.TP
.B \f[B]\-w\f[]
Warn about dirs that are not Git repositories
.RS
.RE
.TP
.B \f[B]\-e\f[]
Exclude repos that are `ok'
.RS
.RE
.TP
.B \f[B]\-f\f[]
Do a `git fetch' on each repo (slow for many repos)
.RS
.RE
.TP
.B \f[B]\-c\f[]
Force color output (preserve colors when using pipes)
.RS
.RE
.PP
You can limit output with the following options:
.TP
.B \f[B]\[en]no\-push\f[]
Do not show branches that need a push.
.RS
.RE
.TP
.B \f[B]\[en]no\-pull\f[]
Do not show branches that need a pull.
.RS
.RE
.TP
.B \f[B]\[en]no\-upstream\f[]
Do not show branches that need an upstream.
.RS
.RE
.TP
.B \f[B]\[en]no\-uncommited\f[]
Do not show branches that have unstaged or uncommitted changes.
.RS
.RE
.TP
.B \f[B]\[en]no\-untracked\f[]
Do not show branches that have untracked files.
.RS
.RE
.TP
.B \f[B]\[en]no\-stashes\f[]
Do now show stashes
.RS
.RE
.SH EXAMPLES
.PP
The following command scans two directories deep for Git projects and
shows their status:
.IP
.nf
\f[C]
$\ mgitstatus\ 
\&./fboender/sla:\ ok\ 
\&./fboender/multi\-git\-status:\ Needs\ push\ (master)\ Untracked\ files
\&./other/peewee:\ ok\ 
\f[]
.fi
.PP
To scan deeper (three dirs instead of two):
.IP
.nf
\f[C]
$\ mgitstatus\ 3
\f[]
.fi
.PP
The following command scans three levels deep in \f[C]/opt/deploy/\f[]
and hides repos that are `ok'.
It does not show stashes:
.IP
.nf
\f[C]
$\ mgitstatus\ \-e\ \-\-no\-stashes\ 3\ /opt/deploy
\f[]
.fi
.SH COPYRIGHT
.PP
Copyright 2016\-2019, Ferry Boender.
.PP
Licensed under the MIT license.
For more information, see the LICENSE.txt file.
.SH AUTHORS
Ferry Boender.
